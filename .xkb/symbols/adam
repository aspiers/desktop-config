xkb_symbols "samsung-n150+" {
    include "pc"
    include "us"
    include "gb"
    include "adam(laptop)"
};

xkb_symbols "kinesis" {
    include "adam(kinesis-left-thumb-pad)"
    include "adam(kinesis-right-thumb-pad)"
    include "adam(kinesis-caps-lock)"
    include "adam(kinesis-swap-up-down)"
    include "adam(kinesis-grave-tilde)"
    include "adam(kinesis-insert)"
    include "adam(us-backslash)"
    include "adam(us-3)"
};

xkb_symbols "hhk" {
    include "pc"
    include "us"
    include "gb"
    include "adam(hhk-left-alpha)"
    include "adam(hhk-mods)"
    include "adam(us-3)"
//    include "adam(meta)"
//    include "adam(control-modifier-map)"
};

xkb_symbols "gyration" {
    include "pc(pc105)"
    include "us"
    include "gb"
    include "adam(laptop-left-alpha)"
    include "adam(gyration-left-mods)"
    include "adam(us-3)"
//    include "adam(meta)"
//    include "adam(control-modifier-map)"
};


default partial
xkb_symbols "laptop" {
    include "adam(laptop-left-alpha)"
    include "adam(laptop-left-mods)"
    include "adam(laptop-right-mods)"
    include "adam(us-backslash)"
    include "adam(us-3)"
//    include "adam(meta)"
//    include "adam(control-modifier-map)"
};

partial modifier_keys
xkb_symbols "laptop-left-mods" {
    virtual_modifiers LControl, LAlt;

    key <LALT> {
        [ Control_L, Control_L ],
        virtualMods = LControl
    };

    key <LWIN> {
        [ Alt_L, Meta_L ],
        virtualMods = LAlt
    };
};

partial modifier_keys
xkb_symbols "gyration-left-mods" {
    virtual_modifiers LControl;

    key <LSGT> {
        [ Control_L, Control_L ],
        virtualMods = LControl
    };
};

partial modifier_keys
xkb_symbols "laptop-right-mods" {
    virtual_modifiers Super, RAlt;

    key <RALT> {
        [ Alt_R ],
        virtualMods = RAlt
    };

    key <MENU> {
    	type[Group1] = "ONE_LEVEL",
    	symbols[Group1] = [ Super_R ],
	virtualMods = Super
    };

    key <RCTL> { [ Menu ] };
};

partial modifier_keys
xkb_symbols "hhk-mods" {
    virtual_modifiers LAlt, LControl, RAlt;

    key <LALT> {      
        [ Alt_L, Meta_L ],
        virtualMods = LAlt
    };

    key <LWIN> {
        [ Control_L, Control_L ],
        virtualMods = LControl
    };

    key <BKSL> {
        [ Alt_R, Alt_R ],
        virtualMods = RAlt
    };
};

partial modifier_keys
xkb_symbols "control-modifier-map" {
    // http://www.charvolant.org/~doug/xkb/html/node5.html
    // claims that modifier_map is for the benefit of older
    // programs.
    modifier_map Control { Control_L, Control_R };
};

partial modifier_keys
xkb_symbols "meta" {
    key <META> {        [ NoSymbol, Meta_L      ]       };
    modifier_map Mod1   { <META> };
};

partial alphanumeric_keys 
xkb_symbols "left-alpha-common" {
    // from latin(basic)
    key <AD01>  { [         w,          W,      lstroke,      Lstroke ] };
    key <AD02>  { [         e,          E,            e,            E ] };
    key <AD03>  { [         r,          R,    paragraph,   registered ] };
    key <AD04>  { [         t,          T,       tslash,       Tslash ] };
    key <AD05>  { [     grave, asciitilde,   dead_grave,   dead_tilde ] };

    key <AC01>  { [         s,          S,       ssharp,      section ] };
    key <AC02>  { [         d,          D,          eth,          ETH ] };
    key <AC03>  { [         f,          F,      dstroke,  ordfeminine ] };
    key <AC04>  { [         g,          G,          eng,          ENG ] };
    key <AC05>  { [ backslash,        bar,      notsign,    brokenbar ] };

    key <AB01>  { [         x,          X, guillemotright,    greater ] };
    key <AB02>  { [         c,          C,         cent,    copyright ] };
    key <AB03>  { [         v,          V, leftdoublequotemark, leftsinglequotemark ]   };
};

partial alphanumeric_keys 
xkb_symbols "laptop-left-alpha" {
    include "adam(left-alpha-common)"

    // from latin(basic)
    key <TLDE>  { [         q,          Q,           at,  Greek_OMEGA ] };
    key <CAPS>  { [         a,          A,           ae,           AE ] };
    key <LCTL>  { [         z,          Z, guillemotleft,        less ] };
};

partial alphanumeric_keys 
xkb_symbols "hhk-left-alpha" {
    include "adam(left-alpha-common)"

    // from latin(basic)
    key <ESC>   { [         q,          Q,           at,  Greek_OMEGA ] };
    key <LCTL>  { [         a,          A,           ae,           AE ] };
    key <AB04>  { [         z,          Z, guillemotleft,        less ] };
};

partial
xkb_symbols "us-backslash" {
    key <BKSL> { [ backslash,        bar,       notsign,        brokenbar ] };
//    key <BKSL> { [ backslash, asciitilde ] };
};

partial
xkb_symbols "us-3" {
    key <AE03> { [          3, numbersign,    sterling,       EuroSign ] };
};

partial modifier_keys
xkb_symbols "kinesis-left-thumb-pad" {
    virtual_modifiers LControl, LAlt;

    key <DELE> {
        [ Meta_L ],
        virtualMods = LAlt
    };
    modifier_map Mod1 { <DELE> };

    key <LALT> { [ Delete ] };

    key <META> { [ NoSymbol, Meta_L ] };
    modifier_map Mod1 { <META> };

    key <HOME> {
        [ Alt_L ],
        virtualMods = LAlt
    };

    key <END> { [ Escape ] };
};

partial modifier_keys
xkb_symbols "kinesis-right-thumb-pad" {
    virtual_modifiers Super;

    key <RALT> { [ Menu ]
    	//type[Group1] = "ONE_LEVEL",
    	//symbols[Group1] = [ Menu ]
    	//symbols[Group1] = [ Multi_key ]
    	//symbols[Group1] = [ Mode_switch ]

    	//type[Group1] = "ONE_LEVEL",
    	//symbols[Group1] = [ Alt_R ],
        //virtualMods = LAlt
    };

    key <RCTL> {
    	type[Group1] = "ONE_LEVEL",
    	symbols[Group1] = [ Super_R ],
	virtualMods = Super
    };
};


partial
xkb_symbols "kinesis-caps-lock" {
    key <CAPS> { [ minus, underscore ] };
};

partial
xkb_symbols "kinesis-grave-tilde" {
    key <TLDE>   { [ grave, asciitilde ] };
};

partial
xkb_symbols "kinesis-swap-up-down" {
    key <UP>   { [ Down ] };
    key <DOWN> { [ Up   ] };
};

partial
xkb_symbols "kinesis-insert" {
    // The following command shows the insert key as <INS> (code 118):
    // 
    // setxkbmap -symbols 'pc+us+gb+adam(kinesis)' -geometry kinesis -print | \
    //     xkbcomp -I/home/adam/.xkb - - | \
    //     xkbprint -label code - - | \
    //     gs -sDEVICE=jpeg -sOutputFile=- -r100 -q - | \
    //     jpegtran -rotate 270 >| kinesis-codes.jpeg
    // 
    // but xev shows it as code 94 which is <LSGT> according to:
    // 
    // setxkbmap -symbols 'pc+us+gb+adam(kinesis)' -geometry kinesis -print | \
    //     xkbcomp -I/home/adam/.xkb -xkb - -
    //
    // Go figure :-/
    key <LSGT>  { [ Insert, Insert ] };
    key <INS>   { [ Insert, Insert ] };
};
