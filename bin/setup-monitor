#!/bin/bash

#exec >& ~/.log/setup-monitor.log

echo "Enabling any disabled monitors ..."
xrandr --auto
sleep 1

clear-dpy-cache

echo -n "Getting layout ... "
if ! layout=$( get-layout ); then
    exit 1
fi

layout=$(basename -s .yaml "$layout")
echo "$layout"

# FIXME: replace the below with dynamic xrandr and xfconf commands based
# on config within the layout file.  The xrandr outputs should be discovered
# dynamically based on model name.
celtic_width=2880
BenQ_width=2560

eval $(~/lib/libdpy.py)

case "$layout" in
    celtic)
        : no xrandr needed
        ;;
    celtic+large)
        xrandr \
            --output ${screen_0_name} --pos 0x0 --scale 1 --auto \
            --output ${screen_1_name} --pos ${celtic_width}x0 --scale 1 --primary --auto
        ;;
    celtic+BenQ)
        xrandr \
            --output ${screen_0_name} --pos 0x0 --scale 1 --auto \
            --output ${screen_1_name} --pos ${celtic_width}x0 --scale 1 --primary --auto
        ;;
    celtic+BenQ+Dell)
        xrandr \
            --output ${screen_0_name} --pos 0x0 --scale 1 --auto \
            --output ${screen_1_name} --pos ${celtic_width}x0 --scale 1 --primary --auto \
            --output ${screen_2_name} --pos $(( celtic_width + BenQ_width ))x0 --scale 1 --auto
        # Alternate setup where laptop screen is off
        # xrandr \
        #     --output ${screen_0_name} --pos 0x0 --scale 1 --off \
        #     --output ${screen_1_name} --pos 0x0 --scale 1 --primary --auto \
        #     --output ${screen_2_name} --pos ${BenQ_width}x0 --scale 1 --auto
        ;;
    ionian)
        xrandr \
            --output DP-0 --pos 0x0 --scale 1 --primary --auto \
            --output DP-2.8 --pos 2560x0 --scale 1 --auto
        ;;
    *)
        echo "setup-monitor: don't know how to handle layout $layout"
        exit 1
        ;;
esac

# xrandr might have reordered the screens (since libdpy orders by
# xoffset)
clear-dpy-cache
eval $(~/lib/libdpy.py)

. ~/lib/libhost.sh
read_localhost_nickname

if [ -e ~/.fluxbox/overlay.$layout ]; then
    ln -sf overlay.$layout ~/.fluxbox/overlay
else
    ln -sf overlay.$localhost_nickname ~/.fluxbox/overlay
fi

# /panels/panel-$i/mode values
#   0 horizontal
#   1 vertical
#   2 deskbar
#
# /panels/panel-$i/position values
#
#   x is centre of panel on virtual display (xrandr coords across all displays)
#
# One might think the below values correspond to this enum, but
# apparently not:
#
# https://gitlab.xfce.org/xfce/xfce4-panel/-/blob/master/libxfce4panel/libxfce4panel-enums.h
#
# p values for panel position:
#   0 not anchored to any edge

# RIGHT:
#    1 right, Y from y parameter
#    2 right top
#    3 right middle
#    4 right bottom
#
# LEFT:
#    5 left, Y from y parameter
#    6 left top
#    7 left middle
#    8 left bottom <- we always want this one
#
# X CENTRE:
#    9 centre top
#   10 centre bottom
#
# X from x parameter
#   11 floating x, top
#   12 floating x, bottom

# xfconf-query -c xfce4-panel -p /panels -lRv

set_panel_prop () {
    panel="$1" output="$2"
    echo "Setting XFCE4 panel $panel to output $output"
    xfconf-query -c xfce4-panel -p /panels/panel-$panel/position -s 'p=8;x=0;y=0' -t string
    xfconf-query -c xfce4-panel -p /panels/panel-$panel/output-name -s "$output" -t string
    xfconf-query -c xfce4-panel -p /panels/panel-$panel/length -s 100 -t int
}

set_dpi () {
    xfconf-query -c xsettings -p /Xft/DPI -s "$1" -t int
}

set_panel_size () {
    panel="$1" size="$2"
    xfconf-query -c xfce4-panel -p /panels/panel-$panel/size -s "$size" -t int
}

setup_panels () {
    # Get primary monitor from libdpy cache (uses existing cache)
    primary_output=$(~/lib/libdpy.py --find-xrandr-primary | jq -r '.name')

    # Set panel 1 to primary output
    set_panel_prop 1 "$primary_output"

    # Collect all non-primary outputs in order
    other_outputs=()
    for screen_var in screen_0_name screen_1_name screen_2_name; do
        if [ -n "${!screen_var}" ] && [ "${!screen_var}" != "$primary_output" ]; then
            other_outputs+=("${!screen_var}")
        fi
    done

    # Set remaining panels (2 and 3) to other outputs in numerical order
    panel_num=2
    for output in "${other_outputs[@]}"; do
        if [ $panel_num -eq 2 ]; then
            set_panel_prop 2 "$output"
            panel_num=3
        elif [ $panel_num -eq 3 ]; then
            set_panel_prop 3 "$output"
            break
        fi
    done
}

setup_keyboard () {
    if host-has-prop laptop; then
        if BenQ-connected; then
            # Connect to Kinesis Advantage 360 over Bluetooth
            adv &

            set_dpi 84

            set_panel_size 1 40
            set_panel_size 2 30
            set_panel_size 3 28
        elif large-monitor-connected; then
            # Even though xrandr reports DPI as more like 160
            set_dpi 128
            set_panel_size 1 40
            set_panel_size 2 36
        else
            adv off &

            set_dpi 128
        fi
    fi
}

main () {
    setup_panels
    setup_keyboard

    sleep 1

    fluxbox-reconfigure  # update ~/.fluxbox/keys

    emacsclient -e '(load "as-fonts")'
    fr
    xfce4-panel -r

    sleep 1

    run-with-local-X-display ly
}

main
