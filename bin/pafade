#!/bin/bash

TARGET_VOL=0x9000

usage () {
    # Call as: usage [EXITCODE] [USAGE MESSAGE]
    exit_code=1
    if [[ "$1" == [0-9] ]]; then
        exit_code="$1"
        shift
    fi
    if [ -n "$1" ]; then
        echo >&2 "$*"
        echo
    fi

    me=`basename $0`

    cat <<EOF >&2
Usage: $me FADE-LENGTH

Fade length is given in seconds.  If negative, performs
a fade-in rather than fade-out.
EOF
    exit "$exit_code"
}

safe_pavol () {
    if ! pavol "$@"; then
        echo >&2 "ERROR: pavol $* failed; aborting."
        exit 1
    fi
}

fade_out () {
    fade_length="$1"
    fade_to 0x0000 "$fade_length"
    pause
    safe_pavol set "$TARGET_VOL"
}

fade_in () {
    fade_length="$1"
    safe_pavol set 0x0000
    play
    fade_to "$TARGET_VOL" "$fade_length"
}

fade_to () {
    target_vol="$1" fade_length="$2"

    curvol=$( safe_pavol get ) || exit $?
    delta=$(( $target_vol - $curvol ))
    step=$(( $delta / $fade_length ))

    while true; do
        curvol=$( safe_pavol get ) || exit $?
        newvol=$(( $curvol + $step ))
        safe_pavol set $( printf "0x%x" $newvol )
        curvol=$( safe_pavol get ) || exit $?
        echo "$curvol"
        if (( step > 0 && curvol >= target_vol )) ||
           (( step < 0 && curvol <= target_vol ))
        then
            break
        fi
        sleep 1
    done
}

_stop () {
    ~/.rvm/bin/rvm 1.9.3 do spotify-dbus Stop
}

play () {
    _stop
    ~/.rvm/bin/rvm 1.9.3 do spotify-dbus PlayPause
}

pause () {
    _stop
}

main () {
    if [ "$1" == '-h' ] || [ "$1" == '--help' ]; then
        usage 0
    fi

    if [ $# != 1 ]; then
        usage
    fi

    fade_length="$1"
    case "$fade_length" in
        -*)
            fade_in "${fade_length#-}"
            ;;
        *)
            fade_out "$fade_length"
            ;;
    esac
}

main "$@"
