#!/bin/bash

usage () {
    # Call as: usage [EXITCODE] [USAGE MESSAGE]
    exit_code=1
    if [[ "$1" == [0-9] ]]; then
        exit_code="$1"
        shift
    fi
    if [ -n "$1" ]; then
        echo "$*" >&2
        echo
    fi

    cat <<EOF >&2
Usage: $me [keymap]
   or: $me --install-symlinks
EOF
    exit "$exit_code"
}

setup_symlinks () {
    here=`dirname $0`
    echo -n "Setting up symlinks for keymap-menu in $here ... "
    cd "$here"
    for op in asdf aoeu sdfg; do
        if [ -e $op ]; then
            if [ -h $op ]; then
                : # assume ok
            else
                echo "WARNING: $op already exists in $here" >&2
            fi
        else
            ln -s $me $op
            echo -n " $op"
        fi
    done
    echo
}

get_interactive_keymap_choice () {
    cat <<EOF
Choose from one of the following keymaps:

  1) Standard GB layout
  2) Dell D620 hacked to suit Adam
  3) Dell D630 hacked to suit Adam
  4) Kinesis Essential
  5) Dell D600 "untouched" - as labelled
  6) Samsung N150+ hacked to suit Adam
  7) Lenovo W520 hacked to suit Adam
  8) Gyration wireless keyboard hacked to suit Adam
  9) HHKL

EOF
#  7) Microsoft Natural 105-key
# 10) Dvorak (applies incrementally over existing keymap)

    echo -n "Enter your choice now > "
    read choice

    unset keymap

    case "$choice" in
        1) keymap=gb              ;;
        2) keymap=d620-hacked     ;;
        3) keymap=d630-hacked     ;;
        4) keymap=kinesis         ;;
        5) keymap=d600-normal     ;;
        6) keymap=n150-hacked     ;;
        #7) keymap=ms-natural      ;;
        7) keymap=w520-hacked     ;;
        8) keymap=gyration-hacked ;;
        9) keymap=hhkl            ;;
        #10) keymap=dvorak   ;;

        *)
            echo "Invalid choice!"
            exit 1
            ;;
    esac
}

get_keymap_settings () {
    XMODMAP_DIR=$ZDOTDIR/.keymaps/X11
    KEYMAP_DIR=$ZDOTDIR/.keymaps/Linux-console

    unset xmodmap exe loadkeys xkb

    keymap="$1"

    case "$keymap" in
        gb)
            xkb='-symbols pc+us+gb'
            #xmodmap=Dell-D630-normal
            ;;
        d620-hacked) 
            xmodmap=Dell-D620-Adam
            ;;
        d630-hacked)
            xmodmap=Dell-D630-Adam
            ;;
        kinesis)
            loadkeys=$KEYMAP_DIR/uk-kinesis.map

            # On indian at least, with a Kinesis keyboard, the evdev map
            # is not the right one.
            if [ "$localhost_nickname" != 'atlantic' ]; then
                #xmodmap=Kinesis-QWERTY
                xkb='-symbols pc+us+gb+adam(kinesis) -geometry kinesis'
            else
                # funny shit happens with evdev on atlantic, even on Fedora 15
                xmodmap=Kinesis-QWERTY-evdev
            fi

            xset r 64 # autorepeat Delete
            xset r 66 # autorepeat left-hand minus

            # I originally had this comment in ~/.Xmodmap.d/lib/Kinesis:
            # kbdrate to work around https://bugs.freedesktop.org/show_bug.cgi?id=17500
            # but I can't remember the context and that bug (entitled
            # "Kernel autorepeat interrupts X softrepeat") is now resolved.
            ;;
        d600)
            xmodmap=Dell-D600-untouched
            ;;
        n150-hacked)
            xkb='-symbols adam(samsung-n150plus)'
            ;;
        w520-hacked)
            xkb='-keycodes lenovo(w520) -symbols adam(lenovo-w520) -geometry digital_vndr/pc(pc102)'
            ;;
        ms-natural)
            xmodmap=MS-Natural-105
            loadkeys=/usr/lib/kbd/keymaps/i386/previous/uk.no-capslock.kmap.gz
            ;;
        gyration-hacked)
            xkb='-symbols adam(gyration)'
            ;;
        hhk)
            xkb='-geometry hhk -symbols adam(hhk)'
            ;;
        dvorak)
            xmodmap=dvorak
            loadkeys=/usr/lib/kbd/keymaps/i386/dvorak/dvorak.kmap.gz
            ;;
        *)
            echo "Invalid keymap '$keymap'."
            exit 1
            ;;
    esac
}

apply_keymap_settings () {
    # if [ -n "$loadkeys" ] && tty | grep -q tty; then
    #   local sudo=''
    #   (( $EUID == 0 )) && sudo=sudo
    #   $sudo loadkeys $loadkeys
    # fi

    if [ -n "$DISPLAY" ]; then
        if [ -n "$xmodmap" ]; then
            backup=$HOME/.Xmodmap.orig.`hostname -s`
            if ! [ -e "$backup" ]; then
                echo "Backing up current xmodmap settings to $backup ..."
                xmodmap -pke > "$backup"
            fi

            echo "Running xmodmap $XMODMAP_DIR/$xmodmap ..."
            xmodmap "$XMODMAP_DIR/$xmodmap"
        fi

        if [ -n "$xkb" ]; then
            echo "Applying setxkbmap $xkb to $DISPLAY ..."
            setxkbmap $xkb -print | \
                xkbcomp -I$ZDOTDIR/.xkb - $DISPLAY 2>&1 | \
                egrep -v 'Warning: +No symbols defined for'
        fi
    else
        echo "\$DISPLAY not set."
    fi

    if [ -n "$exe" ]; then
        echo "Running $exe ..."
        "$exe"
    fi
}

main () {
    me="keymap-menu"

    if [ "$1" == '-h' ] || [ "$1" == '--help' ]; then
        usage 0
    fi

    [ $# -gt 1 ] && usage

    if [ "$1" = '--install-symlinks' ]; then
        setup_symlinks
        exit 0
    fi

    if [ $# = 1 ]; then
        get_keymap_settings "$1"
    elif [ -t 0 ]; then
        get_interactive_keymap_choice
        get_keymap_settings "$keymap"
    else
        usage "Must provide a keymap in non-interactive mode."
    fi

    apply_keymap_settings

    . $ZDOTDIR/.shared_env
    . $ZDOTDIR/.zsh/functions/enable_nullglob

    for hook in $( . $ZDOT_FIND_HOOKS ".keymaps/post-change.d" ); do
        echo "Running post-change hook $hook ..."
        "$hook"
    done
}

main "$@"
