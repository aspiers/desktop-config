#!/bin/bash

me=`basename $0`

usage () {
    # Call as: usage [EXITCODE] [USAGE MESSAGE]
    exit_code=1
    if [[ "$1" == [0-9] ]]; then
        exit_code="$1"
        shift
    fi
    if [ -n "$1" ]; then
        echo "$*" >&2
        echo
    fi

    cat <<EOF >&2
Usage: $me [options] GEOMETRY [OUTDIR|OUTFILE]
Options
   -n, --name     Label with symbol names e.g. <LALT>
   -c, --code     Label with decimal scancode, e.g. 64
   -s, --symbols  Label with symbols, e.g. Alt_L (this is the default)

GEOMETRY
EOF
    exit "$exit_code"
}

parse_opts () {
    if [ "$1" == '-h' ] || [ "$1" == '--help' ]; then
        usage 0
    fi

    unset label suffix
    if [ "$1" == '-n' ] || [ "$1" == '--name' ]; then
        shift
        label='-label name'
        suffix='-name'
    elif [ "$1" == '-c' ] || [ "$1" == '--code' ]; then
        shift
        label='-label code'
        suffix='-code'
    else
        if [ "$1" == '-s' ] || [ "$1" == '--symbols' ]; then
            shift
        fi
        label='-label symbols'
        suffix='-symbols'
    fi

    if [ $# != 1 -a $# != 2 ]; then
        usage
    fi

    geom="$1"

    out="$geom$suffix.jpeg"
    if [ -n "$2" ]; then
        if [ -d "$2" ]; then
            out="${out##*/}"
            out="$2/$out"
        else
            out="$2"
        fi
    fi
}

parse_opts "$@"

if setxkbmap -geometry "$geom" -print |
    xkbcomp -w 3 - - |
    xkbprint $label - - |
    gs -sDEVICE=jpeg -sOutputFile=- -r100 -q - |
    jpegtran -rotate 270 > "$out"
then
    echo "wrote $out"
else
    echo "Failed to write $out"
    exit 1
fi
