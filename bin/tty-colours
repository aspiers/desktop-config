#!/usr/bin/perl
# Author: Todd Larason <jtl@molehill.org>
# $XFree86: xc/programs/xterm/vttests/256colours2.pl,v 1.2 2002/03/26 01:46:43 dickey Exp $

# use the resources for colours 0-15 - usually more-or-less a
# reproduction of the standard ANSI colours, but possibly more
# pleasing shades

my $mode = $ARGV[0] || 256;
my ($system, $cube_side, $greyscale);

if ($mode == 256) {
  # 256 colour mode is
  #     16 system colours
  #  + 216 cube colours (6x6x6)
  #  +  24 greyscale colours
  $system    = 16;
  $cube_side = 6;
  $greyscale = 24;
}
elsif ($mode == 88) {
  #  88 colour mode is
  #     16 system colours
  #  +  64 cube colours (4x4x4)
  #  +   8 greyscale colours
  $system    = 16;
  $cube_side = 4;
  $greyscale = 8;
}
else {
  die "Invalid mode with $mode colours\n";
}

my $cube_colours = $cube_side ** 3;
my $total = $system + $cube_colours + $greyscale;
die "BUG: Total colours $total doesn't match mode $mode\n"
  unless $mode == $total;

print "Mode: $mode colours\n\n";

print "System colours:\n";
for ($colour = 0; $colour < ($system / 2); $colour++) {
    print "\e[48;5;${colour}m. ";
}
print "\e[0m\n";
for ($colour = ($system / 2); $colour < $system; $colour++) {
    print "\e[48;5;${colour}m. ";
}
print "\e[0m\n\n";

print "Colour cube, ${cube_side}x${cube_side}x${cube_side}:\n";
for ($green = 0; $green < $cube_side; $green++) {
    for ($red = 0; $red < $cube_side; $red++) {
	for ($blue = 0; $blue < $cube_side; $blue++) {
	    $colour = $system + ($red * ($cube_side ** 2)) + ($green * $cube_side) + $blue;
	    print "\e[48;5;${colour}m. ";
	}
	print "\e[0m ";
    }
    print "\n";
}

print "\nGrayscale ramp:\n";
for ($colour = $system + $cube_colours; $colour < $total; $colour++) {
    print "\e[48;5;${colour}m. ";
}
print "\e[0m\n";
