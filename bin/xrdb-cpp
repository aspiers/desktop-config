#!/bin/bash
#
# Thanks to Greg Badros for some of the ideas here:
#
# http://groups.google.co.uk/group/comp.windows.x/msg/8dcd8e161d2bc750?&hl=en
#
# or google for `cpp-sed-nl'.

. $ZDOTDIR/lib/libdpy.sh

emacs_font=$( cpp -I $ZDOTDIR/.Xresources.d \
                  -DWIDTH=$dpy_width \
                  $ZDOTDIR/.Xresources.d/all.rdb | \
                awk '/^ *emacs.font/ {print $2}' )

eval $( xlsfonts -ll -fn $emacs_font | \
          awk '/ascent:/  {ascent=$2}
               /descent:/ {descent=$2}
               $1=="max"  {width=$2}
               END {
                 height=ascent+descent;
                 print "font_char_width="  width;
                 print "font_char_height=" height}' )

# Note: emacs used to seem to increase the size by 6x2 on startup (on
# a 1024x768 display, anyhow).  So 78x42 actually ended up being
# 84x44.  This doesn't happen any more, at least not on SLED10.  We
# take 80% of height (watchlogs-system takes 20%) and then allow 50
# pixels to account for the window title and emacs toolbar.
# Whatever's left goes to the emacs frame.

emacs_height=$(( ((dpy_height * 4 / 5) - 50) / font_char_height ))
#emacs_width=$(( (dpy_width - right_margin) / font_char_width ))
emacs_width=83

# just to left of gkrellm
emacs_position=-80+0

cpp -I $ZDOTDIR/.Xresources.d \
    -DHOME=$HOME -DZDOTDIR=$ZDOTDIR \
    -DEMACS_GEOMETRY=${emacs_width}x${emacs_height}${emacs_position} \
    "$@" | sed -e 's/@@/\
/g; s/[ \t]*$//g'
