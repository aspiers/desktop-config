#!/usr/bin/env python3

import argparse
from pprint import pp
import subprocess
import os
import time
import yaml


MAGIC_CMDS = {
    '<stick>': 'If {Matches (Stuck=no)} {Stick}',
    '<unstick>': 'If {Matches (Stuck=yes)} {Stick}',
}


def exec(window_cmds):
    for matcher, *cmds in window_cmds:
        print(matcher)
        for cmd in cmds:
            if cmd in MAGIC_CMDS:
                cmd = MAGIC_CMDS[cmd]
            map_cmd = "Map {%s} {Matches %s}" % (cmd, matcher)
            print("   %s" % map_cmd)
            subprocess.check_call(['fluxbox-remote', map_cmd])
            time.sleep(0.1)
        print()


def parse_args():
    parser = argparse.ArgumentParser(
        description='Activate a fluxbox layout')
    parser.add_argument(
        '--dir',
        type=str,
        default=os.path.expanduser('~/.fluxbox/layouts'),
        help='Directory containing YAML layout files')
    parser.add_argument(
        'layout',
        type=str,
        help='Name of a layout pointing to a YAML file with '
        'window matching patterns and commands')
    return parser.parse_args()


def layout_file(args):
    return "%s/%s.yaml" % (args.dir, args.layout)


def main():
    args = parse_args()

    active_win_id = subprocess.check_output(['xdotool', 'getactivewindow']).rstrip()

    with open(layout_file(args)) as f:
        window_cmds = yaml.safe_load(f)
        # pp(window_cmds)
        exec(window_cmds)

    subprocess.call(['wmctrl', '-ia', active_win_id])


main()
