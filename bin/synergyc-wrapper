#!/bin/bash

CLIENT_PROG=synergyc
HOST_NAME_FILE=$HOME/.localhost-nickname
CLIENT_NAME_FILE=$HOME/.synergy-client-name
SERVER_NAME_FILE=$HOME/.synergy-server-name
DOMAIN_NAME_FILE=$HOME/.synergy-domain-name

me="`basename $0`"

if [ $# -gt 1 ]; then
  echo "Usage: $me [-a]"
  exit 1
fi

_log_it () {
    logger -t "$me[$$]" "$*"
}

_alertme () {
    if [ -n "$alertme" ]; then
        alertme "$*" &
    else
        _log_it "$*"
    fi
}

sigexit () {
    _log_it "pid $$ shutting down"
}

if ps -ef | egrep -v "grep| $$ " | grep -q "bash.*$0"; then
    _log_it "$me already running; exiting." >&2
    exit 1
fi

trap sigexit EXIT

if [ "$1" == '-a' ]; then
  alertme=yes
  shift
fi

read_conf () {
    clientname="`cat $CLIENT_NAME_FILE`"
    if [ -z "$clientname" ]; then
        clientname="`cat $HOST_NAME_FILE`"
        if [ -z "$clientname" ]; then
            echo "Put host nickname in $HOST_NAME_FILE or client name in $CLIENT_NAME_FILE" >&2
            exit 1
        fi
    fi

    servername="`cat $SERVER_NAME_FILE`"
    if [ -z "$servername" ]; then
        echo "Put server name in $SERVER_NAME_FILE" >&2
        exit 1
    fi

    domainname="`cat $DOMAIN_NAME_FILE`"
    if [ -z "$domainname" ]; then
        echo "Put domain name in $DOMAIN_NAME_FILE" >&2
        exit 1
    fi
}


_kill () {
    kill "$@" 2>/dev/null
    sleep 3
    kill -9 "$@" 2>/dev/null
}

# returns success (0) if managed to ensure correct invocation is running
ensure_correct_invocation_running () {
    pids=( $(pgrep -u "$USERNAME" "^$CLIENT_PROG$") )

    if [ "${#pids[@]}" == 1 ]; then
        pid="${pids[0]}"
#        _log_it "$CLIENT_PROG already running: pid $pid"

        args=( $( ps --no-headers -o args -p "$pid" ) )
        # bash--
        nargs="${#args[@]}"
        last_argn=$(( $nargs - 1 ))
        last_arg="${args[$last_argn]}"

        restart=
        if [ "$last_arg" != "$servername" ]; then
            # We're pointing at the wrong server
            _log_it "killing invocation pid $pid (has server $last_arg not $servername)"
            restart=1
        elif [[ "${args[*]}" != *" -n $clientname"* ]]; then
            _log_it "killing invocation pid $pid (client should be $clientname)"
            restart=1
        fi

        [ -z "$restart" ] && return 0

        _log_it "killing invocation pid $pid (has server IP $last_arg not $servername)"
        _kill "$pid"
        pid=
    elif [ "${#pids[@]}" -gt 1 ]; then
        _log_it "multiple instances of $CLIENT_PROG running (${pids[@]}); killing all"
        _kill "${pids[@]}"
    fi

    # No client running now
    "$CLIENT_PROG" -n "$clientname" "$servername" &
    pid=$!

    if [ $? != 0 ]; then
        _alertme "$CLIENT_PROG -n $clientname $servername failed"
        pid=
        return 1
    fi
    
    _log_it "launched $CLIENT_PROG -n $clientname $servername (pid $pid)"
    return 0
}

_log_it "pid $$ started up"

while true; do
    read_conf

    if AC-online; then
#        _log_it "AC power online"
        :
    else
        if [ -n "$pid" ]; then
            _log_it "AC power offline; stopping $CLIENT_PROG"
            _kill "$pid"
            pid=
        fi
        sleep 5
        continue
    fi

    if grep -q $domainname /etc/resolv.conf && isup "$servername"; then
    # dnsdomainname doesn't get changed by DHCP for some reason
    #[ "`dnsdomainname 2>&1`" = $domainname ]
#        _log_it "$servername up"
        :
    else
        if [ -n "$pid" ]; then
            _log_it "$servername down; stopping $CLIENT_PROG"
            _kill "$pid"
            pid=
        fi
        sleep 5
        continue
    fi

    if ! ensure_correct_invocation_running; then
        # Oh dear, can't do much but try again.
        sleep 60
        continue
    fi

    sleep 5
done
