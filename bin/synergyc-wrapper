#!/bin/bash

PING_COUNT=10
CLIENT_PROG=synergyc
CLIENT_NAME_FILE=$HOME/.synergy-client-name
SERVER_NAME_FILE=$HOME/.synergy-server-name
LOCK_DIR=$HOME/.synergy-lock

me="`basename $0`"

if [ $# -gt 1 ]; then
  echo "Usage: $me [-a]"
  exit 1
fi

_log_it () {
    logger "$me: $*"
}

_alertme () {
    if [ -n "$alertme" ]; then
        alertme "$*" &
    else
        _log_it "$*"
    fi
}

clean_up_and_exit () {
    [ -d "$LOCK_DIR" ] && rmdir "$LOCK_DIR"
    exit 0
}

sighup () {
    _log_it "pid $$ received SIGHUP"
    clean_up_and_exit
}

sigterm () {
    _log_it "pid $$ received SIGTERM"
    clean_up_and_exit
}

sigquit () {
    _log_it "pid $$ received SIGQUIT"
    clean_up_and_exit
}

sigexit () {
    _log_it "pid $$ shutting down"
    clean_up_and_exit
}

if [ -d "$LOCK_DIR" ]; then
    _log_it "$me already running or stale lock $LOCK_DIR; exiting." >&2
    exit 1
fi

trap sighup  HUP
trap sigterm TERM
trap sigquit QUIT
trap sigexit EXIT

mkdir "$LOCK_DIR"

if [ "$1" == '-a' ]; then
  alertme=yes
  shift
fi

read_conf () {
    clientname="`cat $CLIENT_NAME_FILE`"
    if [ -z "$clientname" ]; then
        echo "Put client name in $CLIENT_NAME_FILE" >&2
        exit 1
    fi

    servername="`cat $SERVER_NAME_FILE`"
    if [ -z "$servername" ]; then
        echo "Put server name in $SERVER_NAME_FILE" >&2
        exit 1
    fi
}

is_host_up () {
    host="$1"
    shift

#    _log_it "testing if $host is up"

    host_up=
    case "$OSTYPE" in
        solaris*) 
            echo "FIXME: ping count option?" >&2
            exit 1
            ping -s "$host" | grep -q 'bytes from' && host_up=yes
            ;;

        # FreeBSD and Linux
        *)
            ping -c "$PING_COUNT" "$host" | grep -q 'bytes from' && host_up=yes
            ;; 
    esac
    [ -n "$host_up" ]
}

_kill () {
    kill "$@" 2>/dev/null
    sleep 3
    kill -9 "$@" 2>/dev/null
}

ensure_correct_invocation_running () {
    pids=( $(pgrep -u "$USERNAME" "^$CLIENT_PROG$") )

    if [ "${#pids[@]}" == 1 ]; then
        pid="${pids[0]}"
#        _log_it "$CLIENT_PROG already running: pid $pid"

        args=( $( ps --no-headers -o args -p "$pid" ) )
        # bash--
        nargs="${#args[@]}"
        last_argn=$(( $nargs - 1 ))
        last_arg="${args[$last_argn]}"
        
        if [ "$last_arg" = "$servername" ]; then
            # We're pointing at the right server
            return 0
        fi

        _log_it "killing invocation pid $pid (has server IP $last_arg not $servername)"
        _kill "$pid"
        pid=
    elif [ "${#pids[@]}" -gt 1 ]; then
        _log_it "multiple instances of $CLIENT_PROG running (${pids[@]}); killing all"
        _kill "${pids[@]}"
    fi

    # No client running now
    "$CLIENT_PROG" -n "$clientname" "$servername" &
    pid=$!

    if [ $? != 0 ]; then
        _alertme "$CLIENT_PROG -n $clientname $servername failed"
        pid=
        return 1
    fi
    
    _log_it "launched $CLIENT_PROG -n $clientname $servername (pid $pid)"
    return 0
}

_log_it "pid $$ started up"

while true; do
    read_conf

    if is_host_up "$servername"; then
#        _log_it "$servername up"
        if ! ensure_correct_invocation_running; then
            sleep 60
            continue
        fi
    else
        if [ -n "$pid" ]; then
            _log_it "$servername down; stopping $CLIENT_PROG"
            _kill "$pid"
            pid=
        fi
    fi

    sleep 5
done
